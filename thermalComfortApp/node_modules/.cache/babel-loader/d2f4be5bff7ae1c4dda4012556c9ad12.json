{"ast":null,"code":"var _jsxFileName = \"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/EditNotifications/EditNotifications.tsx\";\nimport React from 'react';\nimport './EditNotifications.css';\nimport BaseButton from '../BaseButton/BaseButton';\nimport SecondaryButton from \"../../components/SecondaryButton/SecondaryButton\";\nimport BaseCheckbox from \"../../components/BaseCheckbox/BaseCheckbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { pushNotifs, getNotifs } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { toast } from '../../toast';\n\nfunction EditNotifications(props) {\n  const {\n    toggleState\n  } = props;\n  const {\n    currentUser\n  } = useAuth();\n  const [state, setState] = React.useState({\n    eightAm: false,\n    nineAm: false,\n    tenAm: false,\n    eleven: false,\n    checked12pm: false,\n    checked1pm: false,\n    checked2pm: false,\n    checked3pm: false,\n    checked4pm: false,\n    checked5pm: false,\n    checked6pm: false,\n    checked7pm: false,\n    checked8pm: false\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  React.useEffect(() => {\n    //populate with current profile data if any\n    getNotifs(currentUser.email).then(document => {\n      if (document.exists) {\n        const notifsData = document.data();\n\n        if (notifsData) {\n          setState({ ...state,\n            checked8am: notifsData.eightAm\n          });\n          setState({ ...state,\n            checked8am: notifsData.eightAm\n          });\n        }\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n\n  function postProfile() {\n    if (currentUser) {\n      calPolyStatus != '' ? profileData.calPolyStatus = calPolyStatus : canSubmit = false;\n      biologicalSex != '' ? profileData.biologicalSex = biologicalSex : canSubmit = false;\n      genderIdentification != '' ? profileData.genderIdentification = genderIdentification : canSubmit = false;\n      ethnicity != '' ? profileData.ethnicity = ethnicity : canSubmit = false;\n      disability != '' ? profileData.disability = disability : canSubmit = false;\n      age != '' ? profileData.age = age : canSubmit = false;\n      indoorThermalPreference != '' ? profileData.indoorThermalPreference = indoorThermalPreference : canSubmit = false;\n      profileData.response = response;\n\n      try {\n        pushNotifs(state, currentUser.email);\n        toast(`Thank you! Notifications edited successfully.`);\n      } catch (error) {\n        toast(`Error editing notifications: ${error}`);\n      }\n\n      toggleState();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editnotifs-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SecondaryButton, {\n    onClick: toggleState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Edit Notifications\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Please select times to be notified to take the survey\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked8am,\n    onChange: handleChange,\n    name: \"checked8am\",\n    label: \"8:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked9am,\n    onChange: handleChange,\n    name: \"checked9am\",\n    label: \"9:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked10am,\n    onChange: handleChange,\n    name: \"checked10am\",\n    label: \"10:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked11am,\n    onChange: handleChange,\n    name: \"checked11am\",\n    label: \"11:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked12pm,\n    onChange: handleChange,\n    name: \"checked12pm\",\n    label: \"12:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked1pm,\n    onChange: handleChange,\n    name: \"checked1pm\",\n    label: \"1:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked2pm,\n    onChange: handleChange,\n    name: \"checked2pm\",\n    label: \"2:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked3pm,\n    onChange: handleChange,\n    name: \"checked3pm\",\n    label: \"3:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked4pm,\n    onChange: handleChange,\n    name: \"checked4pm\",\n    label: \"4:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked5pm,\n    onChange: handleChange,\n    name: \"checked5pm\",\n    label: \"5:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked6pm,\n    onChange: handleChange,\n    name: \"checked6pm\",\n    label: \"6:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked7pm,\n    onChange: handleChange,\n    name: \"checked7pm\",\n    label: \"7:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked8pm,\n    onChange: handleChange,\n    name: \"checked8pm\",\n    label: \"8:00 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editprofile-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseButton, {\n    width: '300px',\n    onClick: postProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\n;\nexport default EditNotifications;","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/EditNotifications/EditNotifications.tsx"],"names":["React","BaseButton","SecondaryButton","BaseCheckbox","FormGroup","pushNotifs","getNotifs","useAuth","toast","EditNotifications","props","toggleState","currentUser","state","setState","useState","eightAm","nineAm","tenAm","eleven","checked12pm","checked1pm","checked2pm","checked3pm","checked4pm","checked5pm","checked6pm","checked7pm","checked8pm","handleChange","event","target","name","checked","useEffect","email","then","document","exists","notifsData","data","checked8am","catch","error","console","postProfile","calPolyStatus","profileData","canSubmit","biologicalSex","genderIdentification","ethnicity","disability","age","indoorThermalPreference","response","checked9am","checked10am","checked11am"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,yBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,eAAP,MAA4B,kDAA5B;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,sBAAtC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAuC;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAkBL,OAAO,EAA/B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACe,QAAN,CAAe;AACvCC,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,MAAM,EAAE,KAF+B;AAGvCC,IAAAA,KAAK,EAAE,KAHgC;AAIvCC,IAAAA,MAAM,EAAE,KAJ+B;AAKvCC,IAAAA,WAAW,EAAE,KAL0B;AAMvCC,IAAAA,UAAU,EAAE,KAN2B;AAOvCC,IAAAA,UAAU,EAAE,KAP2B;AAQvCC,IAAAA,UAAU,EAAE,KAR2B;AASvCC,IAAAA,UAAU,EAAE,KAT2B;AAUvCC,IAAAA,UAAU,EAAE,KAV2B;AAWvCC,IAAAA,UAAU,EAAE,KAX2B;AAYvCC,IAAAA,UAAU,EAAE,KAZ2B;AAavCC,IAAAA,UAAU,EAAE;AAb2B,GAAf,CAA1B;;AAgBA,QAAMC,YAAY,GAAIC,KAAD,IAAgD;AACnEhB,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACiB,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA9C,KAAD,CAAR;AACD,GAFD;;AAIAjC,EAAAA,KAAK,CAACkC,SAAN,CAAgB,MAAM;AAAE;AACtB5B,IAAAA,SAAS,CAACM,WAAW,CAACuB,KAAb,CAAT,CAA6BC,IAA7B,CAAmCC,QAAD,IAAc;AAC9C,UAAIA,QAAQ,CAACC,MAAb,EAAqB;AACnB,cAAMC,UAAU,GAAGF,QAAQ,CAACG,IAAT,EAAnB;;AACA,YAAID,UAAJ,EAAgB;AACdzB,UAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY4B,YAAAA,UAAU,EAAEF,UAAU,CAACvB;AAAnC,WAAD,CAAR;AACAF,UAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY4B,YAAAA,UAAU,EAAEF,UAAU,CAACvB;AAAnC,WAAD,CAAR;AACD;AACF;AACF,KARD,EAQG0B,KARH,CAQUC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAVD;AAWD,GAZD,EAYG,EAZH;;AAcA,WAASE,WAAT,GAAuB;AACrB,QAAIjC,WAAJ,EAAiB;AACfkC,MAAAA,aAAa,IAAI,EAAjB,GAAsBC,WAAW,CAACD,aAAZ,GAA4BA,aAAlD,GAAkEE,SAAS,GAAG,KAA9E;AACAC,MAAAA,aAAa,IAAI,EAAjB,GAAsBF,WAAW,CAACE,aAAZ,GAA4BA,aAAlD,GAAkED,SAAS,GAAG,KAA9E;AACAE,MAAAA,oBAAoB,IAAI,EAAxB,GAA6BH,WAAW,CAACG,oBAAZ,GAAmCA,oBAAhE,GAAuFF,SAAS,GAAG,KAAnG;AACAG,MAAAA,SAAS,IAAI,EAAb,GAAkBJ,WAAW,CAACI,SAAZ,GAAwBA,SAA1C,GAAsDH,SAAS,GAAG,KAAlE;AACAI,MAAAA,UAAU,IAAI,EAAd,GAAmBL,WAAW,CAACK,UAAZ,GAAyBA,UAA5C,GAAyDJ,SAAS,GAAG,KAArE;AACAK,MAAAA,GAAG,IAAI,EAAP,GAAYN,WAAW,CAACM,GAAZ,GAAkBA,GAA9B,GAAoCL,SAAS,GAAG,KAAhD;AACAM,MAAAA,uBAAuB,IAAI,EAA3B,GAAgCP,WAAW,CAACO,uBAAZ,GAAsCA,uBAAtE,GAAgGN,SAAS,GAAG,KAA5G;AACAD,MAAAA,WAAW,CAACQ,QAAZ,GAAuBA,QAAvB;;AAEA,UAAI;AACFlD,QAAAA,UAAU,CAACQ,KAAD,EAAQD,WAAW,CAACuB,KAApB,CAAV;AACA3B,QAAAA,KAAK,CAAE,+CAAF,CAAL;AACD,OAHD,CAIA,OAAMmC,KAAN,EAAa;AACXnC,QAAAA,KAAK,CAAE,gCAA+BmC,KAAM,EAAvC,CAAL;AACD;;AACDhC,MAAAA,WAAW;AACZ;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEA,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DALF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEE,KAAK,CAAC4B,UAA7B;AAAyC,IAAA,QAAQ,EAAEZ,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAAC2C,UAA7B;AAAyC,IAAA,QAAQ,EAAE3B,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAAC4C,WAA7B;AAA0C,IAAA,QAAQ,EAAE5B,YAApD;AAAkE,IAAA,IAAI,EAAC,aAAvE;AAAqF,IAAA,KAAK,EAAC,UAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAAC6C,WAA7B;AAA0C,IAAA,QAAQ,EAAE7B,YAApD;AAAkE,IAAA,IAAI,EAAC,aAAvE;AAAqF,IAAA,KAAK,EAAC,UAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACO,WAA7B;AAA0C,IAAA,QAAQ,EAAES,YAApD;AAAkE,IAAA,IAAI,EAAC,aAAvE;AAAqF,IAAA,KAAK,EAAC,UAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACQ,UAA7B;AAAyC,IAAA,QAAQ,EAAEQ,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACS,UAA7B;AAAyC,IAAA,QAAQ,EAAEO,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACU,UAA7B;AAAyC,IAAA,QAAQ,EAAEM,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACW,UAA7B;AAAyC,IAAA,QAAQ,EAAEK,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACY,UAA7B;AAAyC,IAAA,QAAQ,EAAEI,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACa,UAA7B;AAAyC,IAAA,QAAQ,EAAEG,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACc,UAA7B;AAAyC,IAAA,QAAQ,EAAEE,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEhB,KAAK,CAACe,UAA7B;AAAyC,IAAA,QAAQ,EAAEC,YAAnD;AAAiE,IAAA,IAAI,EAAC,YAAtE;AAAmF,IAAA,KAAK,EAAC,SAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CANF,eAqBE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,OAAnB;AAA4B,IAAA,OAAO,EAAEgB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CArBF,CADF;AA2BD;;AAAA;AAED,eAAepC,iBAAf","sourcesContent":["import React from 'react';\nimport './EditNotifications.css';\nimport BaseButton from '../BaseButton/BaseButton'\nimport SecondaryButton from \"../../components/SecondaryButton/SecondaryButton\";\nimport BaseCheckbox from \"../../components/BaseCheckbox/BaseCheckbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { pushNotifs, getNotifs } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext'\nimport { toast } from '../../toast'\n\nfunction EditNotifications(props: any) {\n  const { toggleState } = props;\n  const { currentUser } = useAuth();\n\n  const [state, setState] = React.useState({\n    eightAm: false,\n    nineAm: false,\n    tenAm: false,\n    eleven: false,\n    checked12pm: false,\n    checked1pm: false,\n    checked2pm: false,\n    checked3pm: false,\n    checked4pm: false,\n    checked5pm: false,\n    checked6pm: false,\n    checked7pm: false,\n    checked8pm: false,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  React.useEffect(() => { //populate with current profile data if any\n    getNotifs(currentUser.email).then((document) => {\n      if (document.exists) {\n        const notifsData = document.data();\n        if (notifsData) {\n          setState({ ...state, checked8am: notifsData.eightAm });\n          setState({ ...state, checked8am: notifsData.eightAm });\n        }\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  function postProfile() {\n    if (currentUser) {\n      calPolyStatus != '' ? profileData.calPolyStatus = calPolyStatus : canSubmit = false;\n      biologicalSex != '' ? profileData.biologicalSex = biologicalSex : canSubmit = false;\n      genderIdentification != '' ? profileData.genderIdentification = genderIdentification : canSubmit = false;\n      ethnicity != '' ? profileData.ethnicity = ethnicity : canSubmit = false;\n      disability != '' ? profileData.disability = disability : canSubmit = false;\n      age != '' ? profileData.age = age : canSubmit = false;\n      indoorThermalPreference != '' ? profileData.indoorThermalPreference = indoorThermalPreference : canSubmit = false;\n      profileData.response = response;\n\n      try {\n        pushNotifs(state, currentUser.email);\n        toast(`Thank you! Notifications edited successfully.`);\n      }\n      catch(error) {\n        toast(`Error editing notifications: ${error}`);\n      }\n      toggleState();\n    }\n  }\n\n  return (\n    <div className=\"editnotifs-container\">\n      <div className=\"top-buttons\">\n            <SecondaryButton onClick={toggleState}>Back</SecondaryButton>\n        </div>\n      <h1>Edit Notifications</h1>\n      <h3>Please select times to be notified to take the survey</h3>\n      <FormGroup>\n        <BaseCheckbox checked={state.checked8am} onChange={handleChange} name=\"checked8am\" label=\"8:00 AM\" />\n        <BaseCheckbox checked={state.checked9am} onChange={handleChange} name=\"checked9am\" label=\"9:00 AM\" />\n        <BaseCheckbox checked={state.checked10am} onChange={handleChange} name=\"checked10am\" label=\"10:00 AM\" />\n        <BaseCheckbox checked={state.checked11am} onChange={handleChange} name=\"checked11am\" label=\"11:00 AM\" />\n        <BaseCheckbox checked={state.checked12pm} onChange={handleChange} name=\"checked12pm\" label=\"12:00 PM\" />\n        <BaseCheckbox checked={state.checked1pm} onChange={handleChange} name=\"checked1pm\" label=\"1:00 PM\" />\n        <BaseCheckbox checked={state.checked2pm} onChange={handleChange} name=\"checked2pm\" label=\"2:00 PM\" />\n        <BaseCheckbox checked={state.checked3pm} onChange={handleChange} name=\"checked3pm\" label=\"3:00 PM\" />\n        <BaseCheckbox checked={state.checked4pm} onChange={handleChange} name=\"checked4pm\" label=\"4:00 PM\" />\n        <BaseCheckbox checked={state.checked5pm} onChange={handleChange} name=\"checked5pm\" label=\"5:00 PM\" />\n        <BaseCheckbox checked={state.checked6pm} onChange={handleChange} name=\"checked6pm\" label=\"6:00 PM\" />\n        <BaseCheckbox checked={state.checked7pm} onChange={handleChange} name=\"checked7pm\" label=\"7:00 PM\" />\n        <BaseCheckbox checked={state.checked8pm} onChange={handleChange} name=\"checked8pm\" label=\"8:00 PM\" />\n      </FormGroup>\n      <div className='editprofile-submit'>\n        <BaseButton width={'300px'} onClick={postProfile}>Submit</BaseButton>\n      </div>\n    </div>\n  )\n};\n\nexport default EditNotifications"]},"metadata":{},"sourceType":"module"}