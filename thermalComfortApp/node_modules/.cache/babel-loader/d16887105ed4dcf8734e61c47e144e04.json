{"ast":null,"code":"var _jsxFileName = \"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/EditNotifications/EditNotifications.tsx\";\nimport React from 'react';\nimport './EditNotifications.css';\nimport BaseButton from '../BaseButton/BaseButton';\nimport SecondaryButton from \"../../components/SecondaryButton/SecondaryButton\";\nimport BaseCheckbox from \"../../components/BaseCheckbox/BaseCheckbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { pushProfile, getProfile } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { toast } from '../../toast';\n\nfunction EditNotifications(props) {\n  const {\n    toggleState\n  } = props;\n  const {\n    currentUser\n  } = useAuth();\n  const [state, setState] = React.useState({\n    checked8am: false,\n    checked9am: false,\n    checked10am: false,\n    checked11am: false,\n    checked12pm: false,\n    checked1pm: false,\n    checked2pm: false,\n    checked3pm: false,\n    checked4pm: false,\n    checked5pm: false,\n    checked6pm: false,\n    checked7pm: false,\n    checked8pm: false\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const [calPolyStatus, setCalPolyStatus] = React.useState('');\n  const [biologicalSex, setBiologicalSex] = React.useState('');\n  const [genderIdentification, setGenderIdentification] = React.useState('');\n  const [ethnicity, setEthnicity] = React.useState('');\n  const [disability, setDisability] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [indoorThermalPreference, setIndoorThermalPreference] = React.useState('');\n  const [response, setResponse] = React.useState('');\n  React.useEffect(() => {\n    //populate with current profile data if any\n    getProfile(currentUser.email).then(document => {\n      if (document.exists) {\n        const profileData = document.data();\n        console.log(profileData);\n\n        if (profileData) {\n          setCalPolyStatus(profileData.calPolyStatus);\n          setBiologicalSex(profileData.biologicalSex);\n          setGenderIdentification(profileData.genderIdentification);\n          setEthnicity(profileData.ethnicity);\n          setDisability(profileData.disability);\n          setAge(profileData.age);\n          setIndoorThermalPreference(profileData.indoorThermalPreference);\n          setResponse(profileData.response);\n        }\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  let canSubmit = true;\n  let profileData = {};\n\n  function postProfile() {\n    if (currentUser) {\n      calPolyStatus != '' ? profileData.calPolyStatus = calPolyStatus : canSubmit = false;\n      biologicalSex != '' ? profileData.biologicalSex = biologicalSex : canSubmit = false;\n      genderIdentification != '' ? profileData.genderIdentification = genderIdentification : canSubmit = false;\n      ethnicity != '' ? profileData.ethnicity = ethnicity : canSubmit = false;\n      disability != '' ? profileData.disability = disability : canSubmit = false;\n      age != '' ? profileData.age = age : canSubmit = false;\n      indoorThermalPreference != '' ? profileData.indoorThermalPreference = indoorThermalPreference : canSubmit = false;\n      profileData.response = response;\n\n      if (canSubmit) {\n        try {\n          pushProfile(profileData, currentUser.email);\n          toast(`Thank you! Profile edited successfully.`);\n        } catch (error) {\n          toast(`Error editing profile: ${error}`);\n        }\n\n        toggleState();\n      } else {\n        toast('Please answer all of the non-optional questions before submitting.');\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editnotifs-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SecondaryButton, {\n    onClick: toggleState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Edit Notifications\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Please select times to be notified to take the survey\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked8am,\n    onChange: handleChange,\n    name: \"checked8am\",\n    label: \"8:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked9am,\n    onChange: handleChange,\n    name: \"checked9am\",\n    label: \"9:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked10am,\n    onChange: handleChange,\n    name: \"checked10am\",\n    label: \"10:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked11am,\n    onChange: handleChange,\n    name: \"checked11am\",\n    label: \"11:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(BaseCheckbox, {\n    checked: state.checked12pm,\n    onChange: handleChange,\n    name: \"checked12pa\",\n    label: \"9:00 AM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editprofile-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseButton, {\n    width: '300px',\n    onClick: postProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\n;\nexport default EditNotifications;\n{\n  /* <FormControlLabel\n           control={\n             <GreenCheckbox\n               checked={state.checkedG}\n               onChange={handleChange}\n               name=\"checkedG\"\n             />\n           }\n           label=\"8:00 AM\"\n         /> */\n}","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/EditNotifications/EditNotifications.tsx"],"names":["React","BaseButton","SecondaryButton","BaseCheckbox","FormGroup","pushProfile","getProfile","useAuth","toast","EditNotifications","props","toggleState","currentUser","state","setState","useState","checked8am","checked9am","checked10am","checked11am","checked12pm","checked1pm","checked2pm","checked3pm","checked4pm","checked5pm","checked6pm","checked7pm","checked8pm","handleChange","event","target","name","checked","calPolyStatus","setCalPolyStatus","biologicalSex","setBiologicalSex","genderIdentification","setGenderIdentification","ethnicity","setEthnicity","disability","setDisability","age","setAge","indoorThermalPreference","setIndoorThermalPreference","response","setResponse","useEffect","email","then","document","exists","profileData","data","console","log","catch","error","canSubmit","postProfile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './EditNotifications.css';\nimport BaseButton from '../BaseButton/BaseButton'\nimport SecondaryButton from \"../../components/SecondaryButton/SecondaryButton\";\nimport BaseCheckbox from \"../../components/BaseCheckbox/BaseCheckbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { pushProfile, getProfile } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext'\nimport { toast } from '../../toast'\n\nfunction EditNotifications(props: any) {\n  const { toggleState } = props;\n  const { currentUser } = useAuth();\n\n  const [state, setState] = React.useState({\n    checked8am: false,\n    checked9am: false,\n    checked10am: false,\n    checked11am: false,\n    checked12pm: false,\n    checked1pm: false,\n    checked2pm: false,\n    checked3pm: false,\n    checked4pm: false,\n    checked5pm: false,\n    checked6pm: false,\n    checked7pm: false,\n    checked8pm: false,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n  \n  const [calPolyStatus, setCalPolyStatus] = React.useState('');\n  const [biologicalSex, setBiologicalSex] = React.useState('');\n  const [genderIdentification, setGenderIdentification] = React.useState('');\n  const [ethnicity, setEthnicity] = React.useState('');\n  const [disability, setDisability] = React.useState('');\n  const [age, setAge] = React.useState('');\n  const [indoorThermalPreference, setIndoorThermalPreference] = React.useState('');\n  const [response, setResponse] = React.useState('');\n\n  React.useEffect(() => { //populate with current profile data if any\n    getProfile(currentUser.email).then((document) => {\n      if (document.exists) {\n        const profileData = document.data();\n        console.log(profileData);\n        if (profileData) {\n          setCalPolyStatus(profileData.calPolyStatus);\n          setBiologicalSex(profileData.biologicalSex);\n          setGenderIdentification(profileData.genderIdentification);\n          setEthnicity(profileData.ethnicity);\n          setDisability(profileData.disability);\n          setAge(profileData.age);\n          setIndoorThermalPreference(profileData.indoorThermalPreference);\n          setResponse(profileData.response);\n        }\n      }\n    }).catch((error) => {\n      console.error(error);\n    });\n  }, []);\n\n  let canSubmit = true;\n  let profileData: any = {};\n\n  function postProfile() {\n    if (currentUser) {\n      calPolyStatus != '' ? profileData.calPolyStatus = calPolyStatus : canSubmit = false;\n      biologicalSex != '' ? profileData.biologicalSex = biologicalSex : canSubmit = false;\n      genderIdentification != '' ? profileData.genderIdentification = genderIdentification : canSubmit = false;\n      ethnicity != '' ? profileData.ethnicity = ethnicity : canSubmit = false;\n      disability != '' ? profileData.disability = disability : canSubmit = false;\n      age != '' ? profileData.age = age : canSubmit = false;\n      indoorThermalPreference != '' ? profileData.indoorThermalPreference = indoorThermalPreference : canSubmit = false;\n      profileData.response = response;\n\n      if(canSubmit){\n        try {\n          pushProfile(profileData, currentUser.email);\n          toast(`Thank you! Profile edited successfully.`);\n        }\n        catch(error) {\n          toast(`Error editing profile: ${error}`);\n        }\n        toggleState();\n      }\n      else {\n        toast('Please answer all of the non-optional questions before submitting.');\n      }\n    }\n  }\n\n  return (\n    <div className=\"editnotifs-container\">\n      <div className=\"top-buttons\">\n            <SecondaryButton onClick={toggleState}>Back</SecondaryButton>\n        </div>\n      <h1>Edit Notifications</h1>\n      <h3>Please select times to be notified to take the survey</h3>\n      <FormGroup>\n        <BaseCheckbox checked={state.checked8am} onChange={handleChange} name=\"checked8am\" label=\"8:00 AM\" />\n        <BaseCheckbox checked={state.checked9am} onChange={handleChange} name=\"checked9am\" label=\"9:00 AM\" />\n        <BaseCheckbox checked={state.checked10am} onChange={handleChange} name=\"checked10am\" label=\"10:00 AM\" />\n        <BaseCheckbox checked={state.checked11am} onChange={handleChange} name=\"checked11am\" label=\"11:00 AM\" />\n        <BaseCheckbox checked={state.checked12pm} onChange={handleChange} name=\"checked12pa\" label=\"9:00 AM\" />\n      </FormGroup>\n      <div className='editprofile-submit'>\n        <BaseButton width={'300px'} onClick={postProfile}>Submit</BaseButton>\n      </div>\n    </div>\n  )\n};\n\nexport default EditNotifications\n\n{/* <FormControlLabel\n          control={\n            <GreenCheckbox\n              checked={state.checkedG}\n              onChange={handleChange}\n              name=\"checkedG\"\n            />\n          }\n          label=\"8:00 AM\"\n        /> */}"]},"metadata":{},"sourceType":"module"}