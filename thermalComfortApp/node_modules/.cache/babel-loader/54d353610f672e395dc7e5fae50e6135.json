{"ast":null,"code":"var _jsxFileName = \"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/Survey/Survey.tsx\";\nimport React from 'react';\nimport './Survey.css';\nimport BaseInputField from '../BaseInputField/BaseInputField';\nimport BaseSelectOne from '../BaseSelectOne/BaseSelectOne';\nimport BaseSelectMultiple from '../BaseSelectMultiple/BaseSelectMultiple';\n\nfunction Survey() {\n  const tempInRoomList = [{\n    id: 1,\n    temp: 'Cold'\n  }, {\n    id: 2,\n    temp: 'Cool'\n  }, {\n    id: 3,\n    temp: 'Slightly Cool'\n  }, {\n    id: 4,\n    name: 'Neutral: neither cool or warm'\n  }, {\n    id: 5,\n    temp: 'Slightly Warm'\n  }, {\n    id: 6,\n    temp: 'Warm'\n  }, {\n    id: 7,\n    temp: 'Hot'\n  }];\n  const [tempInRoom, setTempInRoom] = React.useState('');\n  const preferFeelList = [{\n    id: 1,\n    temp: 'Cooler'\n  }, {\n    id: 2,\n    temp: 'No Change'\n  }, {\n    id: 3,\n    temp: 'Warmer'\n  }];\n  const [preferFeel, setPreferFeel] = React.useState('');\n  const airCirculationList = [{\n    id: 1,\n    temp: 'Cooler'\n  }, {\n    id: 2,\n    temp: 'No Change'\n  }, {\n    id: 3,\n    temp: 'Warmer'\n  }];\n  const [airCirculation, setAirCirculation] = React.useState('');\n  const humidList = [{\n    id: 1,\n    temp: 'Too dry'\n  }, {\n    id: 2,\n    temp: 'Slightly dry'\n  }, {\n    id: 3,\n    temp: 'Just right'\n  }, {\n    id: 4,\n    name: 'Slightly humid'\n  }, {\n    id: 5,\n    temp: 'too humid'\n  }];\n  const [humid, setHumid] = React.useState('');\n  const clothingList = [{\n    id: 1,\n    temp: 'Too dry'\n  }, {\n    id: 2,\n    temp: 'Slightly dry'\n  }, {\n    id: 3,\n    temp: 'Just right'\n  }, {\n    id: 4,\n    name: 'Slightly humid'\n  }, {\n    id: 5,\n    temp: 'too humid'\n  }];\n  const [clothing, setClothing] = React.useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"survey-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"baseinput-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseInputField, {\n    label: 'What building are you in?',\n    iduser: 'building',\n    width: '300px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"baseinput-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseInputField, {\n    label: 'What room are you in?',\n    iduser: 'room',\n    width: '300px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    label: 'How does the temperature feel in the room?',\n    optionsList: tempInRoomList,\n    value: tempInRoom,\n    onChange: e => setTempInRoom(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    label: 'How would you prefer for it to feel?',\n    optionsList: preferFeelList,\n    value: preferFeel,\n    onChange: e => setPreferFeel(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    label: 'How do you feel about the air circulation in the room?',\n    optionsList: airCirculationList,\n    value: airCirculation,\n    onChange: e => setAirCirculation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    label: 'How humid does the room feel?',\n    optionsList: humidList,\n    value: humid,\n    onChange: e => setHumid(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(BaseSelectMultiple, {\n    label: 'How humid does the room feel?',\n    optionsList: humidList,\n    value: humid,\n    onChange: e => setHumid(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\nexport default Survey;","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/Survey/Survey.tsx"],"names":["React","BaseInputField","BaseSelectOne","BaseSelectMultiple","Survey","tempInRoomList","id","temp","name","tempInRoom","setTempInRoom","useState","preferFeelList","preferFeel","setPreferFeel","airCirculationList","airCirculation","setAirCirculation","humidList","humid","setHumid","clothingList","clothing","setClothing","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Survey.css';\nimport BaseButton from '../BaseButton/BaseButton'\nimport BaseInputField from '../BaseInputField/BaseInputField';\nimport BaseSelectOne from '../BaseSelectOne/BaseSelectOne';\nimport BaseSelectMultiple from '../BaseSelectMultiple/BaseSelectMultiple';\n\n\nfunction Survey() {\n  const tempInRoomList = [\n    {id: 1, temp: 'Cold'},\n    {id: 2, temp: 'Cool'},\n    {id: 3, temp: 'Slightly Cool'},\n    {id: 4, name: 'Neutral: neither cool or warm'},\n    {id: 5, temp: 'Slightly Warm'},\n    {id: 6, temp: 'Warm'},\n    {id: 7, temp: 'Hot'},\n  ]\n  const [tempInRoom, setTempInRoom] = React.useState('');\n\n  const preferFeelList = [\n    {id: 1, temp: 'Cooler'},\n    {id: 2, temp: 'No Change'},\n    {id: 3, temp: 'Warmer'},\n  ]\n  const [preferFeel, setPreferFeel] = React.useState('');\n\n  const airCirculationList = [\n    {id: 1, temp: 'Cooler'},\n    {id: 2, temp: 'No Change'},\n    {id: 3, temp: 'Warmer'},\n  ]\n  const [airCirculation, setAirCirculation] = React.useState('');\n\n  const humidList = [\n    {id: 1, temp: 'Too dry'},\n    {id: 2, temp: 'Slightly dry'},\n    {id: 3, temp: 'Just right'},\n    {id: 4, name: 'Slightly humid'},\n    {id: 5, temp: 'too humid'},\n  ]\n  const [humid, setHumid] = React.useState('');\n\n  const clothingList = [\n    {id: 1, temp: 'Too dry'},\n    {id: 2, temp: 'Slightly dry'},\n    {id: 3, temp: 'Just right'},\n    {id: 4, name: 'Slightly humid'},\n    {id: 5, temp: 'too humid'},\n  ]\n  const [clothing, setClothing] = React.useState('');\n\n  return (\n    <div className=\"survey-container\">\n      <div className=\"baseinput-div\">\n        <BaseInputField\n          label={'What building are you in?'}\n          iduser={'building'}\n          width={'300px'}\n        />\n      </div>\n      <div className=\"baseinput-div\">\n        <BaseInputField\n          label={'What room are you in?'}\n          iduser={'room'}\n          width={'300px'}\n        />\n      </div>\n      <BaseSelectOne\n        label={'How does the temperature feel in the room?'}\n        optionsList={tempInRoomList}\n        value={tempInRoom}\n        onChange={(e: any) => setTempInRoom(e.target.value)}\n      />\n      <BaseSelectOne\n        label={'How would you prefer for it to feel?'}\n        optionsList={preferFeelList}\n        value={preferFeel}\n        onChange={(e: any) => setPreferFeel(e.target.value)}\n      />\n      <BaseSelectOne\n        label={'How do you feel about the air circulation in the room?'}\n        optionsList={airCirculationList}\n        value={airCirculation}\n        onChange={(e: any) => setAirCirculation(e.target.value)}\n      />\n      <BaseSelectOne\n        label={'How humid does the room feel?'}\n        optionsList={humidList}\n        value={humid}\n        onChange={(e: any) => setHumid(e.target.value)}\n      />\n      <BaseSelectMultiple\n        label={'How humid does the room feel?'}\n        optionsList={humidList}\n        value={humid}\n        onChange={(e: any) => setHumid(e.target.value)}\n      />\n    </div>\n  )\n};\n\nexport default Survey"]},"metadata":{},"sourceType":"module"}