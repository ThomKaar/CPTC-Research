{"ast":null,"code":"var _jsxFileName = \"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/Survey/Survey.tsx\";\nimport React from 'react';\nimport './Survey.css';\nimport BaseButton from '../BaseButton/BaseButton';\nimport BaseInputField from '../BaseInputField/BaseInputField';\nimport BaseSelectOne from '../BaseSelectOne/BaseSelectOne';\nimport BaseSelectMultiple from '../BaseSelectMultiple/BaseSelectMultiple';\nimport { useAuth } from '../../contexts/AuthContext';\n\nfunction Survey(props) {\n  const {\n    toggleState\n  } = props;\n  const {\n    currentUser\n  } = useAuth();\n  let surveyData = {};\n\n  function postData() {\n    if (currentUser) {\n      surveyData.buildingNumber = buildingNumber;\n      surveyData.roomNumber = roomNumber;\n      surveyData.temperatureInRoom = tempInRoom;\n      surveyData.preferredTemperature = preferFeel;\n      surveyData.pushData(surveyData, currentUser.email);\n      toggleState();\n    }\n  }\n\n  const [buildingNumber, setBuildingNumber] = React.useState('');\n  const [roomNumber, setRoomNumber] = React.useState('');\n  const tempInRoomList = [{\n    id: 1,\n    val: 'Cold'\n  }, {\n    id: 2,\n    val: 'Cool'\n  }, {\n    id: 3,\n    val: 'Slightly Cool'\n  }, {\n    id: 4,\n    val: 'Neutral: Neither Cool or Warm'\n  }, {\n    id: 5,\n    val: 'Slightly Warm'\n  }, {\n    id: 6,\n    val: 'Warm'\n  }, {\n    id: 7,\n    val: 'Hot'\n  }];\n  const [tempInRoom, setTempInRoom] = React.useState('');\n  const preferFeelList = [{\n    id: 1,\n    val: 'Cooler'\n  }, {\n    id: 2,\n    val: 'No Change'\n  }, {\n    id: 3,\n    val: 'Warmer'\n  }];\n  const [preferFeel, setPreferFeel] = React.useState('');\n  const airCirculationList = [{\n    id: 1,\n    val: 'Cooler'\n  }, {\n    id: 2,\n    val: 'No Change'\n  }, {\n    id: 3,\n    val: 'Warmer'\n  }];\n  const [airCirculation, setAirCirculation] = React.useState('');\n  const humidList = [{\n    id: 1,\n    val: 'Too Dry'\n  }, {\n    id: 2,\n    val: 'Slightly Dry'\n  }, {\n    id: 3,\n    val: 'Just Right'\n  }, {\n    id: 4,\n    val: 'Slightly Humid'\n  }, {\n    id: 5,\n    val: 'Too Humid'\n  }];\n  const [humid, setHumid] = React.useState('');\n  const clothingList = [{\n    id: 1,\n    val: 'Minimal [shorts, shirt]'\n  }, {\n    id: 2,\n    val: 'Average [pants, shirt]'\n  }, {\n    id: 3,\n    val: 'Heavy [pants, jacket/sweater/sweatshirt]'\n  }];\n  const [clothing, setClothing] = React.useState('');\n  const activitiesList = [{\n    id: 1,\n    val: 'Sitting'\n  }, {\n    id: 2,\n    val: 'Standing'\n  }, {\n    id: 3,\n    val: 'Walking'\n  }, {\n    id: 4,\n    val: 'Jogging/Fast Walking'\n  }, {\n    id: 5,\n    val: 'Running'\n  }, {\n    id: 6,\n    val: 'Other'\n  }];\n  const [activities, setActivities] = React.useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"survey-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Survey\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"baseinput-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseInputField, {\n    label: 'What building are you in?',\n    iduser: 'building',\n    width: '300px',\n    value: buildingNumber,\n    onChange: e => setBuildingNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"baseinput-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseInputField, {\n    label: 'What room are you in?',\n    iduser: 'room',\n    width: '300px',\n    value: roomNumber,\n    onChange: e => setRoomNumber(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"How does the temperature feel in the room?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: tempInRoomList,\n    value: tempInRoom,\n    onChange: e => setTempInRoom(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"How would you prefer for it to feel?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: preferFeelList,\n    value: preferFeel,\n    onChange: e => setPreferFeel(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"How do you feel about the air circulation in the room?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: airCirculationList,\n    value: airCirculation,\n    onChange: e => setAirCirculation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, \"How humid does the room feel?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: humidList,\n    value: humid,\n    onChange: e => setHumid(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"What clothing layers are you wearing?\"), /*#__PURE__*/React.createElement(BaseSelectOne, {\n    optionsList: clothingList,\n    value: clothing,\n    onChange: e => setClothing(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"What activities have you done in the past 10-20 minutes?\"), /*#__PURE__*/React.createElement(BaseSelectMultiple, {\n    optionsList: activitiesList,\n    value: activities,\n    onChange: e => setActivities(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"survey-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BaseButton, {\n    width: '300px',\n    onClick: toggleState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}\n\n;\nexport default Survey;","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/Survey/Survey.tsx"],"names":["React","BaseButton","BaseInputField","BaseSelectOne","BaseSelectMultiple","useAuth","Survey","props","toggleState","currentUser","surveyData","postData","buildingNumber","roomNumber","temperatureInRoom","tempInRoom","preferredTemperature","preferFeel","pushData","email","setBuildingNumber","useState","setRoomNumber","tempInRoomList","id","val","setTempInRoom","preferFeelList","setPreferFeel","airCirculationList","airCirculation","setAirCirculation","humidList","humid","setHumid","clothingList","clothing","setClothing","activitiesList","activities","setActivities","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AAEA,SAASC,OAAT,QAAwB,4BAAxB;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAkBJ,OAAO,EAA/B;AAEA,MAAIK,UAAe,GAAG,EAAtB;;AAEA,WAASC,QAAT,GAAoB;AAClB,QAAIF,WAAJ,EAAiB;AACfC,MAAAA,UAAU,CAACE,cAAX,GAA4BA,cAA5B;AACAF,MAAAA,UAAU,CAACG,UAAX,GAAwBA,UAAxB;AACAH,MAAAA,UAAU,CAACI,iBAAX,GAA+BC,UAA/B;AACAL,MAAAA,UAAU,CAACM,oBAAX,GAAkCC,UAAlC;AACAP,MAAAA,UAAU,CACVQ,QADA,CACSR,UADT,EACqBD,WAAW,CAACU,KADjC;AAEAX,MAAAA,WAAW;AACZ;AACF;;AAED,QAAM,CAACI,cAAD,EAAiBQ,iBAAjB,IAAsCpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA5C;AACA,QAAM,CAACR,UAAD,EAAaS,aAAb,IAA8BtB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAApC;AAEA,QAAME,cAAc,GAAG,CACrB;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GADqB,EAErB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAFqB,EAGrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAHqB,EAIrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAJqB,EAKrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GALqB,EAMrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GANqB,EAOrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAPqB,CAAvB;AASA,QAAM,CAACV,UAAD,EAAaW,aAAb,IAA8B1B,KAAK,CAACqB,QAAN,CAAe,EAAf,CAApC;AAEA,QAAMM,cAAc,GAAG,CACrB;AAACH,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GADqB,EAErB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAFqB,EAGrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAHqB,CAAvB;AAKA,QAAM,CAACR,UAAD,EAAaW,aAAb,IAA8B5B,KAAK,CAACqB,QAAN,CAAe,EAAf,CAApC;AAEA,QAAMQ,kBAAkB,GAAG,CACzB;AAACL,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GADyB,EAEzB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAFyB,EAGzB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAHyB,CAA3B;AAKA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsC/B,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA5C;AAEA,QAAMW,SAAS,GAAG,CAChB;AAACR,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GADgB,EAEhB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAFgB,EAGhB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAHgB,EAIhB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAJgB,EAKhB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GALgB,CAAlB;AAOA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBlC,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA1B;AAEA,QAAMc,YAAY,GAAG,CACnB;AAACX,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GADmB,EAEnB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAFmB,EAGnB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAHmB,CAArB;AAKA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BrC,KAAK,CAACqB,QAAN,CAAe,EAAf,CAAhC;AAEA,QAAMiB,cAAc,GAAG,CACrB;AAACd,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GADqB,EAErB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAFqB,EAGrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAHqB,EAIrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GAJqB,EAKrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GALqB,EAMrB;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,GAAG,EAAE;AAAb,GANqB,CAAvB;AAQA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8BxC,KAAK,CAACqB,QAAN,CAAe,EAAf,CAApC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE,2BADT;AAEE,IAAA,MAAM,EAAE,UAFV;AAGE,IAAA,KAAK,EAAE,OAHT;AAIE,IAAA,KAAK,EAAET,cAJT;AAKE,IAAA,QAAQ,EAAG6B,CAAD,IAAYrB,iBAAiB,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,eAYE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE,uBADT;AAEE,IAAA,MAAM,EAAE,MAFV;AAGE,IAAA,KAAK,EAAE,OAHT;AAIE,IAAA,KAAK,EAAE9B,UAJT;AAKE,IAAA,QAAQ,EAAG4B,CAAD,IAAYnB,aAAa,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAtBF,eAuBE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAEpB,cADf;AAEE,IAAA,KAAK,EAAER,UAFT;AAGE,IAAA,QAAQ,EAAG0B,CAAD,IAAYf,aAAa,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CA7BF,eA8BE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAEhB,cADf;AAEE,IAAA,KAAK,EAAEV,UAFT;AAGE,IAAA,QAAQ,EAAGwB,CAAD,IAAYb,aAAa,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,eAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DApCF,eAqCE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAEd,kBADf;AAEE,IAAA,KAAK,EAAEC,cAFT;AAGE,IAAA,QAAQ,EAAGW,CAAD,IAAYV,iBAAiB,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAHzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,eA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCA3CF,eA4CE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAEX,SADf;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,QAAQ,EAAGQ,CAAD,IAAYP,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,eAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAlDF,eAmDE,oBAAC,aAAD;AACE,IAAA,WAAW,EAAER,YADf;AAEE,IAAA,KAAK,EAAEC,QAFT;AAGE,IAAA,QAAQ,EAAGK,CAAD,IAAYJ,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnDF,eAyDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAzDF,eA0DE,oBAAC,kBAAD;AACE,IAAA,WAAW,EAAEL,cADf;AAEE,IAAA,KAAK,EAAEC,UAFT;AAGE,IAAA,QAAQ,EAAGE,CAAD,IAAYD,aAAa,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DF,eAgEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE,OAAnB;AAA4B,IAAA,OAAO,EAAEnC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAhEF,CADF;AAsED;;AAAA;AAED,eAAeF,MAAf","sourcesContent":["import React from 'react';\nimport './Survey.css';\nimport BaseButton from '../BaseButton/BaseButton'\nimport BaseInputField from '../BaseInputField/BaseInputField';\nimport BaseSelectOne from '../BaseSelectOne/BaseSelectOne';\nimport BaseSelectMultiple from '../BaseSelectMultiple/BaseSelectMultiple';\nimport { pushData } from '../../firebaseConfig';\nimport { useAuth } from '../../contexts/AuthContext'\n\n\nfunction Survey(props: any) {\n  const { toggleState } = props;\n\n  const { currentUser } = useAuth();\n\n  let surveyData: any = {};\n\n  function postData() {\n    if (currentUser) {\n      surveyData.buildingNumber = buildingNumber;\n      surveyData.roomNumber = roomNumber;\n      surveyData.temperatureInRoom = tempInRoom;\n      surveyData.preferredTemperature = preferFeel;\n      surveyData.\n      pushData(surveyData, currentUser.email);\n      toggleState();\n    }\n  }\n\n  const [buildingNumber, setBuildingNumber] = React.useState('');\n  const [roomNumber, setRoomNumber] = React.useState('');\n\n  const tempInRoomList = [\n    {id: 1, val: 'Cold'},\n    {id: 2, val: 'Cool'},\n    {id: 3, val: 'Slightly Cool'},\n    {id: 4, val: 'Neutral: Neither Cool or Warm'},\n    {id: 5, val: 'Slightly Warm'},\n    {id: 6, val: 'Warm'},\n    {id: 7, val: 'Hot'},\n  ]\n  const [tempInRoom, setTempInRoom] = React.useState('');\n\n  const preferFeelList = [\n    {id: 1, val: 'Cooler'},\n    {id: 2, val: 'No Change'},\n    {id: 3, val: 'Warmer'},\n  ]\n  const [preferFeel, setPreferFeel] = React.useState('');\n\n  const airCirculationList = [\n    {id: 1, val: 'Cooler'},\n    {id: 2, val: 'No Change'},\n    {id: 3, val: 'Warmer'},\n  ]\n  const [airCirculation, setAirCirculation] = React.useState('');\n\n  const humidList = [\n    {id: 1, val: 'Too Dry'},\n    {id: 2, val: 'Slightly Dry'},\n    {id: 3, val: 'Just Right'},\n    {id: 4, val: 'Slightly Humid'},\n    {id: 5, val: 'Too Humid'},\n  ]\n  const [humid, setHumid] = React.useState('');\n\n  const clothingList = [\n    {id: 1, val: 'Minimal [shorts, shirt]'},\n    {id: 2, val: 'Average [pants, shirt]'},\n    {id: 3, val: 'Heavy [pants, jacket/sweater/sweatshirt]'},\n  ]\n  const [clothing, setClothing] = React.useState('');\n\n  const activitiesList = [\n    {id: 1, val: 'Sitting'},\n    {id: 2, val: 'Standing'},\n    {id: 3, val: 'Walking'},\n    {id: 4, val: 'Jogging/Fast Walking'},\n    {id: 5, val: 'Running'},\n    {id: 6, val: 'Other'},\n  ]\n  const [activities, setActivities] = React.useState([]);\n\n  return (\n    <div className=\"survey-container\">\n      <h1>Survey</h1>\n\n      <div className=\"baseinput-div\">\n        <BaseInputField\n          label={'What building are you in?'}\n          iduser={'building'}\n          width={'300px'}\n          value={buildingNumber}\n          onChange={(e: any) => setBuildingNumber(e.target.value)}\n        />\n      </div>\n      <div className=\"baseinput-div\">\n        <BaseInputField\n          label={'What room are you in?'}\n          iduser={'room'}\n          width={'300px'}\n          value={roomNumber}\n          onChange={(e: any) => setRoomNumber(e.target.value)}\n        />\n      </div>\n\n      <p>How does the temperature feel in the room?</p>\n      <BaseSelectOne\n        optionsList={tempInRoomList}\n        value={tempInRoom}\n        onChange={(e: any) => setTempInRoom(e.target.value)}\n      />\n\n      <p>How would you prefer for it to feel?</p>\n      <BaseSelectOne\n        optionsList={preferFeelList}\n        value={preferFeel}\n        onChange={(e: any) => setPreferFeel(e.target.value)}\n      />\n\n      <p>How do you feel about the air circulation in the room?</p>\n      <BaseSelectOne\n        optionsList={airCirculationList}\n        value={airCirculation}\n        onChange={(e: any) => setAirCirculation(e.target.value)}\n      />\n      \n      <p>How humid does the room feel?</p>\n      <BaseSelectOne\n        optionsList={humidList}\n        value={humid}\n        onChange={(e: any) => setHumid(e.target.value)}\n      />\n\n      <p>What clothing layers are you wearing?</p>\n      <BaseSelectOne\n        optionsList={clothingList}\n        value={clothing}\n        onChange={(e: any) => setClothing(e.target.value)}\n      />\n\n      <p>What activities have you done in the past 10-20 minutes?</p>\n      <BaseSelectMultiple\n        optionsList={activitiesList}\n        value={activities}\n        onChange={(e: any) => setActivities(e.target.value)}\n      />\n\n      <div className='survey-submit'>\n        <BaseButton width={'300px'} onClick={toggleState}>Submit</BaseButton>\n      </div>\n    </div>\n  )\n};\n\nexport default Survey"]},"metadata":{},"sourceType":"module"}