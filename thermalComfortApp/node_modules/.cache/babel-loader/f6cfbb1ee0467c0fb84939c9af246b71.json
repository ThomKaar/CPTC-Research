{"ast":null,"code":"import { toast } from './toast';\nimport * as firebase from 'firebase';\nconst config = {\n  apiKey: \"AIzaSyArNZ22gj3Uhdd5h0TZ5ojDgu7LWLpmWKs\",\n  authDomain: \"thermalcomfortdataapp.firebaseapp.com\",\n  databaseURL: \"https://thermalcomfortdataapp.firebaseio.com\",\n  projectId: \"thermalcomfortdataapp\",\n  storageBucket: \"thermalcomfortdataapp.appspot.com\",\n  messagingSenderId: \"683582280356\",\n  appId: \"1:683582280356:web:39f0e8e22efe1d57d18c31\"\n};\nfirebase.initializeApp(config);\nexport async function pushData(data, user) {\n  firebase.firestore().collection('users').doc(user).collection('surveys').add({\n    userId: user,\n    buildingNumber: data.buildingNumber,\n    roomNumber: data.roomNumber,\n    thermalSensation: data.thermalSensation,\n    thermalPreference: data.thermalPreference,\n    breezy: data.breezy,\n    humiditySensation: data.humiditySensation,\n    clothing: data.clothing,\n    recentAction: data.recentAction\n  });\n}\nexport async function pushNotifs(data, user) {\n  const ref = firebase.firestore().collection('users').doc(user).collection('notifications').doc('notifications');\n  await ref.set({\n    \"8:00 AM\": data.eightAm,\n    \"9:00 AM\": data.nineAm,\n    \"10:00 AM\": data.tenAm,\n    \"11:00 AM\": data.elevenAm,\n    \"12:00 PM\": data.twelvePm,\n    \"1:00 PM\": data.onePm,\n    \"2:00 PM\": data.twoPm,\n    \"3:00 PM\": data.threePm,\n    \"4:00 PM\": data.fourPm,\n    \"5:00 PM\": data.fivePm,\n    \"6:00 PM\": data.sixPm,\n    \"7:00 PM\": data.sevenPm,\n    \"8:00 PM\": data.eightPm\n  });\n}\nexport async function getProfile(userEmail) {\n  return firebase.firestore().collection('users').doc(userEmail).collection('profile').doc('profile').get();\n}\nexport async function pushProfile(data, userEmail) {\n  const ref = firebase.firestore().collection('users').doc(userEmail).collection('profile').doc('profile');\n  await ref.set({\n    \"Age\": data.age,\n    \"Gender\": data.gender,\n    \"Zip Code\": data.zipCode,\n    \"Native Conditions\": data.nativeConditions,\n    \"Preferred Conditions\": data.preferredConditions\n  });\n}\nexport function logoutUser() {\n  return firebase.auth().signOut();\n}\nexport async function loginUser(email, password) {\n  // authenticate with firebase\n  try {\n    const res = await firebase.auth().signInWithEmailAndPassword(email, password);\n    return res;\n  } catch (error) {\n    toast(error.message, 4000);\n    return false;\n  }\n}\nexport async function registerUser(email, password) {\n  // authenticate with firebase\n  try {\n    firebase.auth().createUserWithEmailAndPassword(email, password);\n    return true;\n  } catch (error) {\n    toast(error.message, 4000);\n    return false;\n  }\n}\nexport async function resetPassword(email) {\n  try {\n    firebase.auth().sendPasswordResetEmail(email);\n    return true;\n  } catch (error) {\n    toast(error.message, 4000);\n    return false;\n  }\n}\nexport const auth = firebase.auth();","map":{"version":3,"sources":["/Users/borajoo/Documents/Code/CPTC-Research/thermalComfortApp/src/firebaseConfig.ts"],"names":["toast","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","pushData","data","user","firestore","collection","doc","add","userId","buildingNumber","roomNumber","thermalSensation","thermalPreference","breezy","humiditySensation","clothing","recentAction","pushNotifs","ref","set","eightAm","nineAm","tenAm","elevenAm","twelvePm","onePm","twoPm","threePm","fourPm","fivePm","sixPm","sevenPm","eightPm","getProfile","userEmail","get","pushProfile","age","gender","zipCode","nativeConditions","preferredConditions","logoutUser","auth","signOut","loginUser","email","password","res","signInWithEmailAndPassword","error","message","registerUser","createUserWithEmailAndPassword","resetPassword","sendPasswordResetEmail"],"mappings":"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","sourcesContent":["import { toast } from './toast'\nimport * as firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyArNZ22gj3Uhdd5h0TZ5ojDgu7LWLpmWKs\",\n    authDomain: \"thermalcomfortdataapp.firebaseapp.com\",\n    databaseURL: \"https://thermalcomfortdataapp.firebaseio.com\",\n    projectId: \"thermalcomfortdataapp\",\n    storageBucket: \"thermalcomfortdataapp.appspot.com\",\n    messagingSenderId: \"683582280356\",\n    appId: \"1:683582280356:web:39f0e8e22efe1d57d18c31\"\n}\n\nfirebase.initializeApp(config);\n\nexport async function pushData(data: any, user: string) {\n    firebase.firestore().collection('users').doc(user).collection('surveys').add({\n        userId: user,\n        buildingNumber: data.buildingNumber,\n        roomNumber: data.roomNumber,\n        thermalSensation: data.thermalSensation,\n        thermalPreference: data.thermalPreference,\n        breezy: data.breezy,\n        humiditySensation: data.humiditySensation,\n        clothing: data.clothing,\n        recentAction: data.recentAction,\n    });\n}\n\nexport async function pushNotifs(data: any, user: string) {\n    const ref = firebase.firestore().collection('users').doc(user).collection('notifications').doc('notifications');\n    await ref.set({\n        \"8:00 AM\": data.eightAm,\n        \"9:00 AM\": data.nineAm,\n        \"10:00 AM\": data.tenAm,\n        \"11:00 AM\": data.elevenAm,\n        \"12:00 PM\": data.twelvePm,\n        \"1:00 PM\": data.onePm,\n        \"2:00 PM\": data.twoPm,\n        \"3:00 PM\": data.threePm,\n        \"4:00 PM\": data.fourPm,\n        \"5:00 PM\": data.fivePm,\n        \"6:00 PM\": data.sixPm,\n        \"7:00 PM\": data.sevenPm,\n        \"8:00 PM\": data.eightPm,\n    });\n}\n\nexport async function getProfile(userEmail: string) {\n    return firebase.firestore()\n        .collection('users')\n        .doc(userEmail)\n        .collection('profile')\n        .doc('profile')\n        .get();\n}\n\nexport async function pushProfile(data: any, userEmail: string) {\n    const ref = firebase.firestore().collection('users').doc(userEmail).collection('profile').doc('profile');\n    await ref.set({\n        \"Age\": data.age,\n        \"Gender\": data.gender,\n        \"Zip Code\": data.zipCode,\n        \"Native Conditions\": data.nativeConditions,\n        \"Preferred Conditions\": data.preferredConditions\n    });\n}\n\nexport function logoutUser() {\n    return firebase.auth().signOut()\n}\n\nexport async function loginUser(email: string, password: string) {\n    // authenticate with firebase\n    try {\n        const res = await firebase.auth().signInWithEmailAndPassword(email, password);\n        return res;\n    } catch(error) {\n        toast(error.message, 4000)\n        return false;\n    }\n}\n\nexport async function registerUser(email: string, password: string) {\n    // authenticate with firebase\n    try {\n        firebase.auth().createUserWithEmailAndPassword(email, password);\n        return true;\n    } catch(error) {\n        toast(error.message, 4000);\n        return false;\n    }\n}\n\nexport async function resetPassword(email: string) {\n    try {\n        firebase.auth().sendPasswordResetEmail(email);\n        return true;\n    }\n    catch(error) {\n        toast(error.message, 4000);\n        return false;\n    }\n}\n\nexport const auth = firebase.auth();\n"]},"metadata":{},"sourceType":"module"}