{"ast":null,"code":"var _jsxFileName = \"/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/BaseSelectOne/BaseSelectOne.tsx\";\nimport React, { useState } from 'react';\nimport './BaseSelectOne.css';\n\nfunction BaseSelectOne(props) {\n  const {\n    optionsList,\n    label\n  } = props;\n  const [defaultText, setDefaultText] = useState(props.defaultText);\n  const [showList, setShowList] = useState(false);\n\n  const handleClickOutside = e => {\n    if (!e.target.classList.contains(\"custom-select-option\") && !e.target.classList.contains(\"selected-text\")) {\n      setShowList(false);\n    }\n  };\n\n  const handleOptionClick = e => {\n    setDefaultText(e.target.getAttribute(\"data-name\"));\n    setShowList(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"baseselectlabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"div\", {\n    className: showList ? \"selected-text active\" : \"selected-text\",\n    onClick: () => {\n      setShowList(!showList);\n      console.log(showList);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, defaultText), showList && /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"select-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, optionsList.map(option => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"custom-select-option\",\n      \"data-name\": option.name,\n      key: option.id,\n      onClick: handleOptionClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, option.name);\n  })));\n}\n\n;\nexport default BaseSelectOne;","map":{"version":3,"sources":["/Users/gabehyun/Desktop/classes/ThermalComfort/CPTC-Research/thermalComfortApp/src/components/BaseSelectOne/BaseSelectOne.tsx"],"names":["React","useState","BaseSelectOne","props","optionsList","label","defaultText","setDefaultText","showList","setShowList","handleClickOutside","e","target","classList","contains","handleOptionClick","getAttribute","console","log","map","option","name","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAO,qBAAP;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAAmC;AAC/B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAyBF,KAA/B;AACA,QAAK,CAACG,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACE,KAAK,CAACG,WAAP,CAA7C;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMS,kBAAkB,GAAIC,CAAD,IAAY;AACnC,QACE,CAACA,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,sBAA5B,CAAD,IACA,CAACH,CAAC,CAACC,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,eAA5B,CAFH,EAGE;AACAL,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GAPH;;AAQA,QAAMM,iBAAiB,GAAIJ,CAAD,IAAY;AAClCJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASI,YAAT,CAAsB,WAAtB,CAAD,CAAd;AACAP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCN,KAAK,CAACE,KAA1C,CADJ,eAEI;AACI,IAAA,SAAS,EAAEG,QAAQ,GAAG,sBAAH,GAA4B,eADnD;AAEI,IAAA,OAAO,EAAE,MAAM;AACXC,MAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKF,WAPL,CAFJ,EAWKE,QAAQ,iBACL;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,WAAW,CAACe,GAAZ,CAAiBC,MAAD,IAAiB;AAClC,wBACI;AACA,MAAA,SAAS,EAAC,sBADV;AAEA,mBAAWA,MAAM,CAACC,IAFlB;AAGA,MAAA,GAAG,EAAED,MAAM,CAACE,EAHZ;AAIA,MAAA,OAAO,EAAEP,iBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMCK,MAAM,CAACC,IANR,CADJ;AAUC,GAXA,CADL,CAZR,CADJ;AA8BH;;AAAA;AAED,eAAenB,aAAf","sourcesContent":["import React, { useState} from 'react';\nimport './BaseSelectOne.css';\n\nfunction BaseSelectOne(props: any) {\n    const { optionsList, label } = props;\n    const[defaultText, setDefaultText] = useState(props.defaultText)\n    const [showList, setShowList] = useState(false);\n    const handleClickOutside = (e: any) => {\n        if (\n          !e.target.classList.contains(\"custom-select-option\") &&\n          !e.target.classList.contains(\"selected-text\")\n        ) {\n          setShowList(false);\n        }\n      };\n    const handleOptionClick = (e: any) => {\n        setDefaultText(e.target.getAttribute(\"data-name\"));\n        setShowList(false);\n    };\n\n    return (\n        <div>\n            <label className=\"baseselectlabel\">{props.label}</label>\n            <div\n                className={showList ? \"selected-text active\" : \"selected-text\"}\n                onClick={() => {\n                    setShowList(!showList);\n                    console.log(showList)\n                }}\n             >\n                {defaultText}\n            </div>\n            {showList && (\n                <ul className=\"select-options\">\n                    {optionsList.map((option: any) => {\n                    return (\n                        <li\n                        className=\"custom-select-option\"\n                        data-name={option.name}\n                        key={option.id}\n                        onClick={handleOptionClick}\n                        >\n                        {option.name}\n                        </li>\n                    );\n                    })}\n                </ul>\n            )}\n        </div>\n    )\n};\n\nexport default BaseSelectOne"]},"metadata":{},"sourceType":"module"}